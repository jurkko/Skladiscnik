<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABM5JREFUeF7t
        nUuMFFUUhgcwQIJGozGGDT42Gh8bDJoQIRPiC/BWjY/W6MoYWEJcykLCwhDYkEAirgzqsuyq6jGKQRIm
        0Wg01mNaM4jgAlyAwQQmEEhGA+0pOD1e7lR3V1M13aeK/0v+MOmuc6vu+bvu48xQPQIAAGCg1BxnEf8I
        holyg5WWF35pedFVUmw3QsVvgUGi6sEjZIDDRrR02V70g/LCdXwomE82uNH9thseoMT/axoxR350WLnx
        Kg4FRWKN/3qf8qK9lOiZOYnvLrqDYk/VJx/jpkAexvz4LsuNdlJiLxqJ/l9u9L3yw9fp589Jc4Yw1hXb
        jz7b6P78EDcN+qHmTN1u+fE2SuR5I7G6mjRXvMQh1xjzwyfp9a+N43TNkIH7X3GD5RwCukFGLFZutIUS
        95eRSF3HlR+9uWNHayGHzYFWW2toqPouJbaty5Yb737Z++keDgE6oxMTtyk/fptWSCdTktfWn5Tkzcmx
        HNYTux5voLjQaEfXNJ1ze3JHcsgtTqu1gJJco8T8ZiRK11nlhu+OHphYylH9MXuO8FhK2239nescVYAS
        9CIlouunl8b794v69CZ3FrX5Di2HTxnn0dX3XVh6lBc8Qx3/1kiErnkd35N5ioaprXSeXPNU6UnKHNTJ
        r1I639aM7YcfDmoFlHElN2mu5EqPNd58mDqWWuZgXSF9qr5oPsghAyXrXoeOG+WQcqKcYAV15mNSpzJH
        YpBrN6JHOWSoJNUA2jzuo2vqVg34pnTlmIxlDrEdy1Avu2q7UV3KB6kjVbv1u1WUWUMdajvy/KHmMlq1
        vEcXd067WFOlnRylLUY6opU5zhgXqOs43f5vVGH5mGG5fok+mLsoL3dzyGCYrzJHWchQjjlf5Ia2M63W
        AprMXqMJ+2jKRbSVr8xRFvoo+aw/eGIJRxUHlzkC44S6BvSpkEWm0cKPTtluvKmQ0ULsuCmMjPPp77nm
        U+XFH6Q02paMlYUwkhVn73JM7PHh2UluLxqmLqQ0KHPtLYxee7K+N5U1J7jTaKQcu1NhdKpaJFMBH5KN
        FEOm+S1wE/Af88EQKcAQYcAQYcAQYcAQYQzVkGQnOuZPPkXL5GerKtpjrO2nXjdUQ5KdqBFbVU1lrd0N
        zRD+PboeV2kpL7a5610ZmiF2I3jCiKu0bDd+i7veFUmGTJOS30tXRX+QZvtXRkN+4bcqAU3m+/X+wZAh
        A0OEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOE
        AUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUOEAUM07Ea8mtr7
        iJT2/8c76RPlR69yE7mBIcyYHz9AbV022s6sop47D0MYfry33m5fsr1oOzeVCxjCWOPH7ujxiPNuOlfU
        01RhiMa1r8Wohy9cf+Z6NiVP61nvRPdyE7mBIcKAIcKAIcKQZMg/pLR1/g2yvfAQ/avHVfp5WZYb/8iv
        99Jp0mxcEYZABeomDJlaTIHJXZHaIJRPyReNcaqzQ0vGPWmNQXkVHqk5ziJOc39s9JqPpz239lYX7XGe
        S3u9pxrB01X8ojQAAAAAAABAmRkZ+Q/mctuEuCqskQAAAABJRU5ErkJggg==
</value>
  </data>
</root>